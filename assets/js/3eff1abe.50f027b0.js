"use strict";(self.webpackChunkbotomy_wiki=self.webpackChunkbotomy_wiki||[]).push([[8162],{4595:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});var s=i(4848),a=i(8453);const l={sidebar_position:1},r="How to Play",t={id:"gameplay/how-to-play",title:"How to Play",description:"Game Rules",source:"@site/docs/gameplay/how-to-play.md",sourceDirName:"gameplay",slug:"/gameplay/how-to-play",permalink:"/Botomy/docs/gameplay/how-to-play",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Quickstart Tutorial",permalink:"/Botomy/docs/getting-started/quickstart-tutorial"},next:{title:"Levelling",permalink:"/Botomy/docs/gameplay/levelling"}},o={},c=[{value:"Game Rules",id:"game-rules",level:2},{value:"Victory Condition",id:"victory-condition",level:3},{value:"Free for All",id:"free-for-all",level:4},{value:"Survival",id:"survival",level:4},{value:"Gaining XP",id:"gaining-xp",level:3},{value:"Character Progression",id:"character-progression",level:3},{value:"Gameplay Rules",id:"gameplay-rules",level:3},{value:"Architecture",id:"architecture",level:2},{value:"Basic Movement",id:"basic-movement",level:2},{value:"Combat",id:"combat",level:2},{value:"Using Items",id:"using-items",level:2},{value:"Skill Points",id:"skill-points",level:2},{value:"Debugging",id:"debugging",level:2},{value:"Character Messages",id:"character-messages",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"how-to-play",children:"How to Play"}),"\n",(0,s.jsx)(n.h2,{id:"game-rules",children:"Game Rules"}),"\n",(0,s.jsx)(n.h3,{id:"victory-condition",children:"Victory Condition"}),"\n",(0,s.jsx)(n.h4,{id:"free-for-all",children:"Free for All"}),"\n",(0,s.jsx)(n.p,{children:"The player with the highest XP at the end of the match wins. Combine strategies around item collection, combat mechanics, and skill progression to best other players."}),"\n",(0,s.jsx)(n.h4,{id:"survival",children:"Survival"}),"\n",(0,s.jsx)(n.p,{children:"Work together with other players to survive as many stages as you can. Levelling and combat strategy are key."}),"\n",(0,s.jsx)(n.h3,{id:"gaining-xp",children:"Gaining XP"}),"\n",(0,s.jsx)(n.p,{children:"Earn experience points by:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Collecting items scattered around the map"}),"\n",(0,s.jsx)(n.li,{children:"Defeating other players"}),"\n",(0,s.jsx)(n.li,{children:"Killing monsters"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"character-progression",children:"Character Progression"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Gain 1 skill point per level up to level 20"}),"\n",(0,s.jsxs)(n.li,{children:["Spend points on:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Speed (move faster)"}),"\n",(0,s.jsx)(n.li,{children:"Attack (deal more damage)"}),"\n",(0,s.jsx)(n.li,{children:"Health (increase max HP)"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Equip power-ups for special attacks"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"gameplay-rules",children:"Gameplay Rules"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Only one power-up can be equipped at a time"}),"\n",(0,s.jsx)(n.li,{children:"Dash ability only works when near danger (enemies, players, bombs, etc.)"}),"\n",(0,s.jsx)(n.li,{children:"Unlimited deaths with a respawn delay"}),"\n",(0,s.jsx)(n.li,{children:"Fixed number of monsters and items spawn on the map"}),"\n",(0,s.jsxs)(n.li,{children:["Kill streaks enable overclocking:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Boosts speed and damage"}),"\n",(0,s.jsx)(n.li,{children:"Enables health regeneration"}),"\n",(0,s.jsx)(n.li,{children:"Each kill prolongs the overclocking duration"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"Level up quickly to gain an advantage! More skill points means better stats."})}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.p,{children:"Botomy uses a client-server architecture where:"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Game Client\n    participant Bot Code\n\n    loop Every Frame\n        Game Client->>Bot Code: Send level_data JSON\n        Note right of Bot Code: Process game state<br/>Decide next moves\n        Bot Code--\x3e>Game Client: Return moves array JSON\n        Note left of Game Client: Execute moves\n    end"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"The game client sends level data to your bot server via HTTP POST requests"}),"\n",(0,s.jsx)(n.li,{children:"Your server processes the data and returns a list of moves"}),"\n",(0,s.jsx)(n.li,{children:"The game executes those moves for your character"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Each frame, the game sends updated level data and expects new moves in response."}),"\n",(0,s.jsxs)(n.admonition,{title:"Real-Time Gameplay",type:"warning",children:[(0,s.jsx)(n.p,{children:"The game runs in real-time:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Your server must respond quickly to keep up"}),"\n",(0,s.jsx)(n.li,{children:"The game will not pause while waiting for your response"}),"\n",(0,s.jsx)(n.li,{children:"If your server is too slow, you may miss opportunities to act"}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"basic-movement",children:"Basic Movement"}),"\n",(0,s.jsx)(n.p,{children:"Move your character by returning coordinates to move towards:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "move_to": {\n    "x": 100,\n    "y": 200\n  }\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"The coordinate system starts at (0,0) in the top-left corner"})}),"\n",(0,s.jsx)(n.h2,{id:"combat",children:"Combat"}),"\n",(0,s.jsx)(n.p,{children:"Return these actions to engage in combat:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  "attack",     // Basic attack\n  "shield",     // Block incoming damage\n  "dash",       // Quick movement burst\n  "special"      // Use equipped special attack\n]\n'})}),"\n",(0,s.jsx)(n.p,{children:"Multiple actions can be combined in a single frame:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[{ "move_to": { "x": 100, "y": 200 } }, "attack", "shield"]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"using-items",children:"Using Items"}),"\n",(0,s.jsx)(n.p,{children:"Activate items in your inventory:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{"use": "big_potion"}    // Heal to full health\n{"use": "speed_zapper"}  // Slow nearby enemies\n{"use": "ring"}         // Become invisible\n'})}),"\n",(0,s.jsx)(n.h2,{id:"skill-points",children:"Skill Points"}),"\n",(0,s.jsx)(n.p,{children:"When you level up, redeem skill points to improve your character:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{"redeem_skill_point": "health"}   // More HP\n{"redeem_skill_point": "speed"}    // Move faster\n{"redeem_skill_point": "attack"}   // Deal more damage\n'})}),"\n",(0,s.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,s.jsx)(n.p,{children:"Add debug information to help track your bot's decision making:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "debug_info": {\n    "target_id": "enemy_1",\n    "message": "Pursuing nearest enemy"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Debug info appears above your character in-game."}),"\n",(0,s.jsx)(n.h2,{id:"character-messages",children:"Character Messages"}),"\n",(0,s.jsx)(n.p,{children:"Make your character speak:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{ "speak": "Hello world!" }\n'})}),"\n",(0,s.jsx)(n.p,{children:"Messages appear as speech bubbles above your character."}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsx)(n.p,{children:"Combine multiple actions in a single frame to create complex behaviors:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'[\n  { "move_to": { "x": 100, "y": 200 } },\n  "attack",\n  { "speak": "Take that!" },\n  { "debug_info": { "message": "Attacking enemy" } }\n]\n'})})]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>t});var s=i(6540);const a={},l=s.createContext(a);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);