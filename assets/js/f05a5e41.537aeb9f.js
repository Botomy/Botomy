"use strict";(self.webpackChunkbotomy_wiki=self.webpackChunkbotomy_wiki||[]).push([[3804],{8448:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var i=t(4848),a=t(8453);const s={sidebar_position:1},o="Game Info",r={id:"level-data/game-info/game-info",title:"Game Info",description:"The game_info object contains information about the current game state:",source:"@site/docs/level-data/game-info/game-info.md",sourceDirName:"level-data/game-info",slug:"/level-data/game-info/",permalink:"/Botomy/docs/level-data/game-info/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Level Data",permalink:"/Botomy/docs/level-data/"},next:{title:"Own Player",permalink:"/Botomy/docs/level-data/own-player/"}},l={},c=[{value:"Game Types",id:"game-types",level:2},{value:"Game States",id:"game-states",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"game-info",children:"Game Info"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"game_info"})," object contains information about the current game state:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "map": "basic",         // Current map name\n  "game_type": "ffa",        // Game type (ffa, survival)\n  "state": "STARTED",        // Game state\n  "time_left_s": 300,        // Time remaining in seconds\n  "friendly_fire": true,     // Whether players can damage other players (false for survival)\n  "latency": 70             // Ping to server in milliseconds\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"game-types",children:"Game Types"}),"\n",(0,i.jsx)(n.p,{children:"Available game types include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ffa"})," - Free-for-all combat mode"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"survival"})," - Wave-based enemy combat"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"game-states",children:"Game States"}),"\n",(0,i.jsx)(n.p,{children:"Possible game states:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"STARTING"})," - Match is about to begin"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"STARTED"})," - Match is in progress"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ENDING"})," - Match is finishing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ENDED"})," - Match has concluded"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MATCH_COMPLETED"})," - Final results ready"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["Monitor ",(0,i.jsx)(n.code,{children:"latency"})," to adjust your bot's timing decisions"]})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"The game state and latency update every frame while running"})})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(6540);const a={},s=i.createContext(a);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);