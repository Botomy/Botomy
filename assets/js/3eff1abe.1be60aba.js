"use strict";(self.webpackChunkbotomy_wiki=self.webpackChunkbotomy_wiki||[]).push([[8162],{4595:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var t=s(4848),a=s(8453);const i={sidebar_position:1},o="How to Play",r={id:"gameplay/how-to-play",title:"How to Play",description:"Architecture",source:"@site/docs/gameplay/how-to-play.md",sourceDirName:"gameplay",slug:"/gameplay/how-to-play",permalink:"/Botomy/docs/gameplay/how-to-play",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Quickstart Tutorial",permalink:"/Botomy/docs/getting-started/quickstart-tutorial"},next:{title:"Level Data",permalink:"/Botomy/docs/level-data/"}},l={},c=[{value:"Architecture",id:"architecture",level:2},{value:"Basic Movement",id:"basic-movement",level:2},{value:"Combat",id:"combat",level:2},{value:"Using Items",id:"using-items",level:2},{value:"Skill Points",id:"skill-points",level:2},{value:"Debugging",id:"debugging",level:2},{value:"Character Messages",id:"character-messages",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"how-to-play",children:"How to Play"}),"\n",(0,t.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,t.jsx)(n.p,{children:"Botomy uses a client-server architecture where:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"The game client sends level data to your bot server via HTTP POST requests"}),"\n",(0,t.jsx)(n.li,{children:"Your server processes the data and returns a list of moves"}),"\n",(0,t.jsx)(n.li,{children:"The game executes those moves for your character"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Each frame, the game sends updated level data and expects new moves in response."}),"\n",(0,t.jsx)(n.h2,{id:"basic-movement",children:"Basic Movement"}),"\n",(0,t.jsx)(n.p,{children:"Move your character by returning coordinates to move towards:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "move_to": {\n    "x": 100,\n    "y": 200\n  }\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"The coordinate system starts at (0,0) in the top-left corner"})}),"\n",(0,t.jsx)(n.h2,{id:"combat",children:"Combat"}),"\n",(0,t.jsx)(n.p,{children:"Return these actions to engage in combat:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  "attack",     // Basic attack\n  "shield",     // Block incoming damage\n  "dash",       // Quick movement burst\n  "special"      // Use equipped special attack\n]\n'})}),"\n",(0,t.jsx)(n.p,{children:"Multiple actions can be combined in a single frame:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[{ "move_to": { "x": 100, "y": 200 } }, "attack", "shield"]\n'})}),"\n",(0,t.jsx)(n.h2,{id:"using-items",children:"Using Items"}),"\n",(0,t.jsx)(n.p,{children:"Activate items in your inventory:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{"use": "big_potion"}    // Heal to full health\n{"use": "speed_zapper"}  // Slow nearby enemies\n{"use": "ring"}         // Become invisible\n'})}),"\n",(0,t.jsx)(n.h2,{id:"skill-points",children:"Skill Points"}),"\n",(0,t.jsx)(n.p,{children:"When you level up, redeem skill points to improve your character:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{"redeem_skill_point": "health"}   // More HP\n{"redeem_skill_point": "speed"}    // Move faster\n{"redeem_skill_point": "attack"}   // Deal more damage\n'})}),"\n",(0,t.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,t.jsx)(n.p,{children:"Add debug information to help track your bot's decision making:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "debug_info": {\n    "target_id": "enemy_1",\n    "message": "Pursuing nearest enemy"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Debug info appears above your character in-game."}),"\n",(0,t.jsx)(n.h2,{id:"character-messages",children:"Character Messages"}),"\n",(0,t.jsx)(n.p,{children:"Make your character speak:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{ "speak": "Hello world!" }\n'})}),"\n",(0,t.jsx)(n.p,{children:"Messages appear as speech bubbles above your character."}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.p,{children:"Combine multiple actions in a single frame to create complex behaviors:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  { "move_to": { "x": 100, "y": 200 } },\n  "attack",\n  { "speak": "Take that!" },\n  { "debug_info": { "message": "Attacking enemy" } }\n]\n'})})]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(6540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);