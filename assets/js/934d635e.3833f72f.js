"use strict";(self.webpackChunkbotomy_wiki=self.webpackChunkbotomy_wiki||[]).push([[3172],{9508:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=t(4848),s=t(8453);const o={sidebar_position:4},a="Enemies",r={id:"level-data/enemies/enemies",title:"Enemies",description:"The enemies array contains information about NPC enemies:",source:"@site/docs/level-data/enemies/enemies.md",sourceDirName:"level-data/enemies",slug:"/level-data/enemies/",permalink:"/Botomy/docs/level-data/enemies/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Players",permalink:"/Botomy/docs/level-data/players/"},next:{title:"Items",permalink:"/Botomy/docs/level-data/items/"}},l={},d=[{value:"Enemy Types",id:"enemy-types",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"enemies",children:"Enemies"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"enemies"})," array contains information about NPC enemies:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "id": "Tiny1",         // Unique enemy identifier\n    "type": "tiny",          // Enemy type (wolf/ghoul/minotaur/tiny)\n    "position": {            // Current position on map\n      "x": 500,\n      "y": 600\n    },\n    "health": 50,           // Current health points\n    "attack_damage": 25,    // Damage dealt by attacks\n    "is_zapped": false,     // Affected by speed zapper\n    "is_frozen": false,     // Frozen by ice attacks\n    "is_pushed": false,     // Being pushed back\n    "direction": "left",    // Facing direction\n    "points": 100          // XP awarded when killed\n  }\n]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"enemy-types",children:"Enemy Types"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"wolf"})," - Fast melee attacker with little health"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ghoul"})," - Average attacker"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"minotaur"})," - Big monster that gives as good as it gets"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"tiny"})," - Quick and agile with a powerful punch"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"Different enemy types require different strategies - wolves are fast but weak, while minotaurs are slow but tough"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);